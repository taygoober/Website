name: Update Repository Statistics
on:
  schedule:
    - cron: '0 * * * *'  # Run hourly (you can adjust as needed)
  workflow_dispatch:        # Allow manual triggers

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Fetch repository data
        run: |
          # Get main repository info
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }} > temp_repo_data.json
          
          # Get commit information
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/commits?per_page=1" > temp_commit_data.json
          
          # Process data with jq using a compatible approach
          repo_name=$(jq -r '.name' temp_repo_data.json)
          stars=$(jq -r '.stargazers_count' temp_repo_data.json)
          forks=$(jq -r '.forks_count' temp_repo_data.json)
          updated_at=$(jq -r '.updated_at' temp_repo_data.json)
          last_commit_date=$(jq -r '.[0].commit.author.date' temp_commit_data.json)
          last_commit_message=$(jq -r '.[0].commit.message' temp_commit_data.json)
          current_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          # Create the JSON file with the extracted values
          cat > repo-stats.json << EOF
          {
            "name": "$repo_name",
            "stars": $stars,
            "forks": $forks,
            "updated_at": "$updated_at",
            "last_commit_date": "$last_commit_date",
            "last_commit_message": $(jq -n --arg msg "$last_commit_message" '$msg'),
            "last_updated": "$current_time"
          }
          EOF
          
          # Clean up temp files
          rm temp_repo_data.json temp_commit_data.json
          
      - name: Commit and push if changed
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add repo-stats.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update repository statistics"
          git push
